# ==============================================
# BUDFLOW CONFIGURATION
# ==============================================

# Application Settings
APP_NAME=BudFlow
APP_VERSION=0.1.0
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=DEBUG

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=1
RELOAD=true

# Security Settings
SECRET_KEY=your-secret-key-change-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_HOURS=168
REFRESH_TOKEN_EXPIRE_DAYS=30

# Encryption Settings
ENCRYPTION_KEY=your-encryption-key-change-in-production
SALT_ROUNDS=12

# Database Configuration
DATABASE_URL=postgresql://user:password@localhost:5432/budflow
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20
DATABASE_ECHO=false

# Test Database (for running tests)
TEST_DATABASE_URL=postgresql://user:password@localhost:5432/budflow_test

# Redis Configuration
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=
REDIS_MAX_CONNECTIONS=10

# MongoDB Configuration (for vector storage and document store)
MONGODB_URL=mongodb://localhost:27017
MONGODB_DATABASE=budflow
MONGODB_USERNAME=
MONGODB_PASSWORD=

# Neo4j Configuration (for graph-based workflow storage)
NEO4J_URI=bolt://localhost:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=password

# ClickHouse Configuration (for analytics and time-series data)
CLICKHOUSE_HOST=localhost
CLICKHOUSE_PORT=9000
CLICKHOUSE_DATABASE=budflow
CLICKHOUSE_USERNAME=
CLICKHOUSE_PASSWORD=

# Queue Configuration
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1
CELERY_TASK_SERIALIZER=json
CELERY_RESULT_SERIALIZER=json
CELERY_ACCEPT_CONTENT=["json"]
CELERY_TIMEZONE=UTC

# File Storage Configuration
STORAGE_TYPE=local  # Options: local, s3, minio
STORAGE_PATH=./data/storage
S3_BUCKET=budflow-storage
S3_REGION=us-east-1
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=
S3_ENDPOINT_URL=  # For MinIO compatibility

# Email Configuration
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@budflow.com
SMTP_USE_TLS=true

# Multi-Factor Authentication
MFA_ENABLED=true
MFA_ISSUER=BudFlow
MFA_SERVICE_NAME=BudFlow Workflow Platform

# LDAP Configuration (Enterprise)
LDAP_ENABLED=false
LDAP_SERVER=ldap://localhost:389
LDAP_BIND_DN=cn=admin,dc=company,dc=com
LDAP_BIND_PASSWORD=
LDAP_USER_BASE_DN=ou=users,dc=company,dc=com
LDAP_GROUP_BASE_DN=ou=groups,dc=company,dc=com
LDAP_USER_FILTER=(uid={username})
LDAP_GROUP_FILTER=(memberUid={username})

# OAuth2 Configuration
OAUTH2_ENABLED=false
OAUTH2_CLIENT_ID=
OAUTH2_CLIENT_SECRET=
OAUTH2_AUTHORIZATION_URL=
OAUTH2_TOKEN_URL=
OAUTH2_USERINFO_URL=
OAUTH2_SCOPES=openid profile email

# SAML Configuration (Enterprise)
SAML_ENABLED=false
SAML_SP_ENTITY_ID=https://your-domain.com/budflow
SAML_SP_ACS_URL=https://your-domain.com/auth/saml/acs
SAML_IDP_ENTITY_ID=
SAML_IDP_SSO_URL=
SAML_IDP_CERT=

# KeyCloak Integration (Enterprise)
KEYCLOAK_ENABLED=false
KEYCLOAK_SERVER_URL=
KEYCLOAK_REALM=
KEYCLOAK_CLIENT_ID=
KEYCLOAK_CLIENT_SECRET=

# AI Configuration
OPENAI_API_KEY=
ANTHROPIC_API_KEY=
GOOGLE_API_KEY=
HUGGINGFACE_API_KEY=

# Vector Database Configuration
VECTOR_DB_TYPE=mongodb  # Options: mongodb, chromadb, faiss
CHROMA_HOST=localhost
CHROMA_PORT=8000
FAISS_INDEX_PATH=./data/faiss

# LangChain Configuration
LANGCHAIN_ENDPOINT=
LANGCHAIN_API_KEY=
LANGCHAIN_PROJECT=budflow

# Model Context Protocol
MCP_ENABLED=true
MCP_SERVER_PORT=3001
MCP_CLIENT_TIMEOUT=30

# Webhook Configuration
WEBHOOK_TIMEOUT=30
WEBHOOK_MAX_REDIRECTS=5
WEBHOOK_TEST_TIMEOUT=10

# Execution Configuration
MAX_EXECUTION_TIME=3600  # 1 hour in seconds
MAX_EXECUTION_MEMORY=1024  # 1GB in MB
MAX_PARALLEL_EXECUTIONS=10
MAX_PAYLOAD_SIZE=104857600  # 100MB in bytes

# Monitoring and Observability
METRICS_ENABLED=true
PROMETHEUS_PORT=8001
JAEGER_ENABLED=false
JAEGER_AGENT_HOST=localhost
JAEGER_AGENT_PORT=6831

# OpenTelemetry Configuration
OTEL_ENABLED=false
OTEL_EXPORTER_OTLP_ENDPOINT=
OTEL_EXPORTER_OTLP_HEADERS=
OTEL_SERVICE_NAME=budflow
OTEL_SERVICE_VERSION=0.1.0

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# CORS Configuration
CORS_ENABLED=true
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
CORS_CREDENTIALS=true
CORS_METHODS=["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
CORS_HEADERS=["*"]

# Health Check Configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health
HEALTH_CHECK_TIMEOUT=30

# License Configuration (Enterprise)
LICENSE_KEY=
LICENSE_CHECK_INTERVAL=86400  # 24 hours in seconds

# Multi-Tenancy Configuration
MULTI_TENANT_ENABLED=false
DEFAULT_TENANT=default

# External Secret Management (Enterprise)
VAULT_ENABLED=false
VAULT_URL=
VAULT_TOKEN=
VAULT_MOUNT_POINT=secret
AWS_SECRETS_MANAGER_ENABLED=false
AWS_REGION=us-east-1
AZURE_KEY_VAULT_ENABLED=false
AZURE_VAULT_URL=
GOOGLE_SECRET_MANAGER_ENABLED=false
GOOGLE_PROJECT_ID=

# Task Runner Configuration
TASK_RUNNER_ENABLED=true
TASK_RUNNER_ISOLATION=process  # Options: thread, process, docker
TASK_RUNNER_TIMEOUT=300  # 5 minutes
TASK_RUNNER_MEMORY_LIMIT=512  # 512MB
TASK_RUNNER_CPU_LIMIT=1.0

# Backup and Recovery
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_TYPE=local  # Options: local, s3, azure, gcp
BACKUP_ENCRYPTION_ENABLED=true

# Development Settings
DEV_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://127.0.0.1:3000"]
DEV_RELOAD=true
DEV_LOG_SQL=false
DEV_MOCK_EXTERNAL_SERVICES=false

# Testing Configuration
TEST_PARALLEL=true
TEST_COVERAGE_THRESHOLD=80
TEST_MOCK_EXTERNAL_APIS=true