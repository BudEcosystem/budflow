"""add_workflow_models

Revision ID: ad85666e6fad
Revises: b3d643bccdad
Create Date: 2025-06-30 13:20:26.741327

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from budflow.auth.models import GUID


# revision identifiers, used by Alembic.
revision: str = 'ad85666e6fad'
down_revision: Union[str, Sequence[str], None] = 'b3d643bccdad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('resource', sa.String(length=50), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permissions'))
    )
    op.create_index(op.f('ix_permissions_action'), 'permissions', ['action'], unique=False)
    op.create_index(op.f('ix_permissions_name'), 'permissions', ['name'], unique=True)
    op.create_index(op.f('ix_permissions_resource'), 'permissions', ['resource'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scope', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles'))
    )
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('uuid', GUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_super_admin', sa.Boolean(), nullable=False),
    sa.Column('mfa_enabled', sa.Boolean(), nullable=False),
    sa.Column('mfa_secret', sa.String(length=255), nullable=True),
    sa.Column('recovery_codes_hash', sa.Text(), nullable=True),
    sa.Column('browser_session_id', sa.String(length=255), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=True)
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], name=op.f('fk_role_permissions_permission_id_permissions')),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_permissions_role_id_roles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_permissions'))
    )
    op.create_index(op.f('ix_role_permissions_permission_id'), 'role_permissions', ['permission_id'], unique=False)
    op.create_index(op.f('ix_role_permissions_role_id'), 'role_permissions', ['role_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('scope_type', sa.String(length=20), nullable=True),
    sa.Column('scope_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('assigned_by_user_id', sa.Integer(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by_user_id'], ['users.id'], name=op.f('fk_user_roles_assigned_by_user_id_users')),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_user_roles_role_id_roles')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_roles_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_roles'))
    )
    op.create_index(op.f('ix_user_roles_role_id'), 'user_roles', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_roles_user_id'), 'user_roles', ['user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_token', sa.String(length=255), nullable=False),
    sa.Column('browser_session_id', sa.String(length=255), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_sessions'))
    )
    op.create_index(op.f('ix_user_sessions_browser_session_id'), 'user_sessions', ['browser_session_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_session_token'), 'user_sessions', ['session_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'INACTIVE', 'ARCHIVED', name='workflowstatus'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('error_workflow_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('hash', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.Column('total_executions', sa.Integer(), nullable=False),
    sa.Column('successful_executions', sa.Integer(), nullable=False),
    sa.Column('failed_executions', sa.Integer(), nullable=False),
    sa.Column('last_execution_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['error_workflow_id'], ['workflows.id'], name=op.f('fk_workflows_error_workflow_id_workflows'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_workflows_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflows'))
    )
    op.create_index('ix_workflows_status', 'workflows', ['status'], unique=False)
    op.create_index('ix_workflows_updated_at', 'workflows', ['updated_at'], unique=False)
    op.create_index('ix_workflows_user_id', 'workflows', ['user_id'], unique=False)
    op.create_table('workflow_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('mode', sa.Enum('TRIGGER', 'MANUAL', 'WEBHOOK', 'SCHEDULE', 'TEST', name='executionmode'), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'RUNNING', 'SUCCESS', 'ERROR', 'CANCELED', 'CRASHED', 'WAITING', name='executionstatus'), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('error', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('retry_of', sa.Integer(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['retry_of'], ['workflow_executions.id'], name=op.f('fk_workflow_executions_retry_of_workflow_executions'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_workflow_executions_user_id_users')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_workflow_executions_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_executions')),
    sa.UniqueConstraint('uuid', name=op.f('uq_workflow_executions_uuid'))
    )
    op.create_index('ix_workflow_executions_created_at', 'workflow_executions', ['created_at'], unique=False)
    op.create_index('ix_workflow_executions_status', 'workflow_executions', ['status'], unique=False)
    op.create_index('ix_workflow_executions_uuid', 'workflow_executions', ['uuid'], unique=False)
    op.create_index('ix_workflow_executions_workflow_id', 'workflow_executions', ['workflow_id'], unique=False)
    op.create_table('workflow_nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=36), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.Enum('TRIGGER', 'ACTION', 'CONDITION', 'LOOP', 'MERGE', 'SET', 'FUNCTION', 'WEBHOOK', 'SCHEDULE', 'MANUAL', name='nodetype'), nullable=False),
    sa.Column('type_version', sa.String(length=20), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('credentials', sa.JSON(), nullable=True),
    sa.Column('position', sa.JSON(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('always_output_data', sa.Boolean(), nullable=False),
    sa.Column('retry_on_fail', sa.Boolean(), nullable=False),
    sa.Column('max_tries', sa.Integer(), nullable=False),
    sa.Column('wait_between_tries', sa.Integer(), nullable=False),
    sa.Column('execute_once', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_workflow_nodes_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_nodes')),
    sa.UniqueConstraint('uuid', name=op.f('uq_workflow_nodes_uuid')),
    sa.UniqueConstraint('workflow_id', 'uuid', name='uq_workflow_nodes_workflow_uuid')
    )
    op.create_index('ix_workflow_nodes_type', 'workflow_nodes', ['type'], unique=False)
    op.create_index('ix_workflow_nodes_uuid', 'workflow_nodes', ['uuid'], unique=False)
    op.create_index('ix_workflow_nodes_workflow_id', 'workflow_nodes', ['workflow_id'], unique=False)
    op.create_table('node_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_execution_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'RUNNING', 'SUCCESS', 'ERROR', 'DISABLED', 'WAITING', name='nodeexecutionstatus'), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('try_number', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['node_id'], ['workflow_nodes.id'], name=op.f('fk_node_executions_node_id_workflow_nodes')),
    sa.ForeignKeyConstraint(['workflow_execution_id'], ['workflow_executions.id'], name=op.f('fk_node_executions_workflow_execution_id_workflow_executions')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_node_executions'))
    )
    op.create_index('ix_node_executions_created_at', 'node_executions', ['created_at'], unique=False)
    op.create_index('ix_node_executions_node_id', 'node_executions', ['node_id'], unique=False)
    op.create_index('ix_node_executions_status', 'node_executions', ['status'], unique=False)
    op.create_index('ix_node_executions_workflow_execution_id', 'node_executions', ['workflow_execution_id'], unique=False)
    op.create_table('workflow_connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.Column('source_node_id', sa.Integer(), nullable=False),
    sa.Column('target_node_id', sa.Integer(), nullable=False),
    sa.Column('source_output', sa.String(length=255), nullable=False),
    sa.Column('target_input', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('source_node_id != target_node_id', name=op.f('ck_workflow_connections_ck_no_self_connection')),
    sa.ForeignKeyConstraint(['source_node_id'], ['workflow_nodes.id'], name=op.f('fk_workflow_connections_source_node_id_workflow_nodes')),
    sa.ForeignKeyConstraint(['target_node_id'], ['workflow_nodes.id'], name=op.f('fk_workflow_connections_target_node_id_workflow_nodes')),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], name=op.f('fk_workflow_connections_workflow_id_workflows')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workflow_connections')),
    sa.UniqueConstraint('workflow_id', 'source_node_id', 'target_node_id', 'source_output', 'target_input', 'type', name='uq_workflow_connections_unique')
    )
    op.create_index('ix_workflow_connections_source_node_id', 'workflow_connections', ['source_node_id'], unique=False)
    op.create_index('ix_workflow_connections_target_node_id', 'workflow_connections', ['target_node_id'], unique=False)
    op.create_index('ix_workflow_connections_workflow_id', 'workflow_connections', ['workflow_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_workflow_connections_workflow_id', table_name='workflow_connections')
    op.drop_index('ix_workflow_connections_target_node_id', table_name='workflow_connections')
    op.drop_index('ix_workflow_connections_source_node_id', table_name='workflow_connections')
    op.drop_table('workflow_connections')
    op.drop_index('ix_node_executions_workflow_execution_id', table_name='node_executions')
    op.drop_index('ix_node_executions_status', table_name='node_executions')
    op.drop_index('ix_node_executions_node_id', table_name='node_executions')
    op.drop_index('ix_node_executions_created_at', table_name='node_executions')
    op.drop_table('node_executions')
    op.drop_index('ix_workflow_nodes_workflow_id', table_name='workflow_nodes')
    op.drop_index('ix_workflow_nodes_uuid', table_name='workflow_nodes')
    op.drop_index('ix_workflow_nodes_type', table_name='workflow_nodes')
    op.drop_table('workflow_nodes')
    op.drop_index('ix_workflow_executions_workflow_id', table_name='workflow_executions')
    op.drop_index('ix_workflow_executions_uuid', table_name='workflow_executions')
    op.drop_index('ix_workflow_executions_status', table_name='workflow_executions')
    op.drop_index('ix_workflow_executions_created_at', table_name='workflow_executions')
    op.drop_table('workflow_executions')
    op.drop_index('ix_workflows_user_id', table_name='workflows')
    op.drop_index('ix_workflows_updated_at', table_name='workflows')
    op.drop_index('ix_workflows_status', table_name='workflows')
    op.drop_table('workflows')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_session_token'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_browser_session_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_roles_user_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_role_id'), table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_role_permissions_role_id'), table_name='role_permissions')
    op.drop_index(op.f('ix_role_permissions_permission_id'), table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_resource'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_name'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_action'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
